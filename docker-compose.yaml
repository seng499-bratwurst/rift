version: "3.8"
services:
  app:
    build:
      context: ./App
      dockerfile: Dockerfile
    ports:
      - "5000:8080"
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ConnectionStrings__DefaultConnection: "Host=postgres;Port=5432;Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD};Database=${POSTGRES_DB}"
      LLmSettings__TogetherAI__ApiKey: ${TOGETHER_API_KEY}
      LLmSettings__HuggingFace__ApiKey: ${HF_API_KEY}
      LLmSettings__GoogleGemma__ApiKey: ${GOOGLE_API_KEY}
      ONC_TOKEN: ${ONC_TOKEN}
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
    restart: on-failure

  chromadb:
    build:
      context: ./ChromaDB
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - chroma_data:/src/chroma_data
      - ./Dataset:/src/Dataset

  reranker:
    build:
      context: ./ReRanker
      dockerfile: Dockerfile
    ports:
      - "6000:6000"
    restart: on-failure

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  chroma_data:
